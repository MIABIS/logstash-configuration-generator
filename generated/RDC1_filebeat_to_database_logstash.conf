input {
	beats {
		port => 5066
	}
}

filter {
	if [type] == "rdconnect_data1" {
		mutate {
			split => { "source" => "/" }
			add_field => { "sub_type" => "%{[source][3]}" }
		}

		mutate {
			join => { "source" => "/" }
		}

		if [sub_type] == "Sample.csv" {
			csv {
				columns => ["Sample ID", "Disease", "MIABIS Material Type", "Material Type", "Anatomical Site", "Sex", "Diagnosis Type", "Volume", "Genotype data available", "Age at Sampling", "Age at Death", "Age at Diagnosis", "Age at Remission", "Affected", "Family members available", "Related samples available", "Registry data available", "Hosting Biobank", "Hosting Registry", "Participant ID", "Date of last update"]
				separator => ","
			}
			translate {
				field => "MIABIS Material Type"
				destination => "MIABIS Material Type"
				exact => true
				override => true
				dictionary => []
			}
			translate {
				field => "Material Type"
				destination => "Material Type"
				exact => true
				override => true
				dictionary => []
			}
			translate {
				field => "Anatomical Site"
				destination => "Anatomical Site"
				exact => true
				override => true
				dictionary => []
			}
			translate {
				field => "Sex"
				destination => "Sex"
				exact => true
				override => true
				dictionary => []
			}
			translate {
				field => "Diagnosis Type"
				destination => "Diagnosis Type"
				exact => true
				override => true
				dictionary => []
			}
			translate {
				field => "Genotype data available"
				destination => "Genotype data available"
				exact => true
				override => true
				dictionary => []
			}
			translate {
				field => "Affected"
				destination => "Affected"
				exact => true
				override => true
				dictionary => []
			}
			translate {
				field => "Family members available"
				destination => "Family members available"
				exact => true
				override => true
				dictionary => []
			}
			translate {
				field => "Related samples available"
				destination => "Related samples available"
				exact => true
				override => true
				dictionary => []
			}
			translate {
				field => "Registry data available"
				destination => "Registry data available"
				exact => true
				override => true
				dictionary => []
			}
			translate {
				field => "Disease"
				destination => "Disease"
				exact => true
				override => true
				dictionary => []
			}
		}
	}
}

output {
	stdout { codec => rubydebug }

	if [type] == "rdconnect_data1" {

		if [sub_type] == "Sample.csv" {
			jdbc {
				driver_jar_path => "C:/logstash-5.3.0/mysql-connector-java-5.1.40-bin.jar"
				driver_class => "com.mysql.jdbc.Driver"
				connection_string => "jdbc:mysql://localhost:3306/rdconnect-federation"
				username => "root"
				password => "Sommar14@"
				statement => [ "INSERT INTO SAMPLE (SAMPLE_ID, DISEASE, MIABIS_MATERIAL_TYPE, MATERIAL_TYPE, ANATOMICAL_SITE, SEX, DIAGNOSIS_TYPE, GENOTYPE_DATA_AVAILABLE, AGE_AT_SAMPLING, AGE_AT_DEATH, AGE_AT_DIAGNOSIS, AGE_AT_REMISSION, AFFECTED, FAMILY_MEMBERS_AVAILABLE, RELATED_SAMPLES_AVAILABLE, REGISTRY_DATA_AVAILABLE, HOSTING_BIOBANK, HOSTING_REGISTRY, PARTICIPANT_ID, DATE_OF_LAST_UPDATE) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE SAMPLE_ID=VALUES(SAMPLE_ID), DISEASE=VALUES(DISEASE), MIABIS_MATERIAL_TYPE=VALUES(MIABIS_MATERIAL_TYPE), MATERIAL_TYPE=VALUES(MATERIAL_TYPE), ANATOMICAL_SITE=VALUES(ANATOMICAL_SITE), SEX=VALUES(SEX), DIAGNOSIS_TYPE=VALUES(DIAGNOSIS_TYPE), GENOTYPE_DATA_AVAILABLE=VALUES(GENOTYPE_DATA_AVAILABLE), AGE_AT_SAMPLING=VALUES(AGE_AT_SAMPLING), AGE_AT_DEATH=VALUES(AGE_AT_DEATH), AGE_AT_DIAGNOSIS=VALUES(AGE_AT_DIAGNOSIS), AGE_AT_REMISSION=VALUES(AGE_AT_REMISSION), AFFECTED=VALUES(AFFECTED), FAMILY_MEMBERS_AVAILABLE=VALUES(FAMILY_MEMBERS_AVAILABLE), RELATED_SAMPLES_AVAILABLE=VALUES(RELATED_SAMPLES_AVAILABLE), REGISTRY_DATA_AVAILABLE=VALUES(REGISTRY_DATA_AVAILABLE), HOSTING_BIOBANK=VALUES(HOSTING_BIOBANK), HOSTING_REGISTRY=VALUES(HOSTING_REGISTRY), PARTICIPANT_ID=VALUES(PARTICIPANT_ID), DATE_OF_LAST_UPDATE=VALUES(DATE_OF_LAST_UPDATE)", "Sample ID", "Disease", "MIABIS Material Type", "Material Type", "Anatomical Site", "Sex", "Diagnosis Type", "Genotype data available", "Age at Sampling", "Age at Death", "Age at Diagnosis", "Age at Remission", "Affected", "Family members available", "Related samples available", "Registry data available", "Hosting Biobank", "Hosting Registry", "Participant ID", "Date of last update" ]
			}
		}
	}
}
